using Microsoft.EntityFrameworkCore;
using StudentPortal.Entities.Models;

public class RoleService : IRoleService
{
    private readonly StudentdbContext _context;

    public RoleService(StudentdbContext context)
    {
        _context = context;
    }

    public async Task<IEnumerable<Role>> GetRolesAsync()
    {
        return await _context.Roles.ToListAsync();
    }

    public async Task<Role> GetRoleAsync(int id)
    {
        return await _context.Roles.FindAsync(id);
    }

    public async Task AddRoleAsync(Role role)
    {
        _context.Roles.Add(role);
        await _context.SaveChangesAsync();
    }

    public async Task UpdateRoleAsync(Role role)
    {
        _context.Entry(role).State = EntityState.Modified;
        await _context.SaveChangesAsync();
    }

    public async Task DeleteRoleAsync(int id)
    {
        var role = await _context.Roles.FindAsync(id);
        if (role != null)
        {
            _context.Roles.Remove(role);
            await _context.SaveChangesAsync();
        }
    }

    public async Task<bool> RoleExistsAsync(int id)
    {
        return await _context.Roles.AnyAsync(e => e.Roleid == id);
    }
}
